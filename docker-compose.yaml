services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: always
    expose:
      - 11434
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - caddy-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "ollama", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${N8N_POSTGRES_DB},${LITELLM_POSTGRES_DB}
      - N8N_POSTGRES_DB=${N8N_POSTGRES_DB}
      - N8N_POSTGRES_USER=${N8N_POSTGRES_USER}
      - N8N_POSTGRES_PASSWORD=${N8N_POSTGRES_PASSWORD}
      - LITELLM_POSTGRES_DB=${LITELLM_POSTGRES_DB}
      - LITELLM_POSTGRES_USER=${LITELLM_POSTGRES_USER}
      - LITELLM_POSTGRES_PASSWORD=${LITELLM_POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - caddy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_POSTGRES_DB}
      - DB_POSTGRESDB_USER=${N8N_POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_POSTGRES_PASSWORD}
      - NODE_ENV=production
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_HOST=${N8N_HOST:-localhost}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
    expose:
      - 5678
    volumes:
      - n8n-data:/home/node/.n8n
      - ./files:/files
    networks:
      - caddy-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:5678/healthz", "-q"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  litellm:
    image: ghcr.io/berriai/litellm-database:main-latest
    container_name: litellm
    restart: always
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - DATABASE_URL=postgresql://${LITELLM_POSTGRES_USER}:${LITELLM_POSTGRES_PASSWORD}@postgres:5432/${LITELLM_POSTGRES_DB}
      - UI_USERNAME=${LITELLM_UI_USERNAME}
      - UI_PASSWORD=${LITELLM_UI_PASSWORD}
    expose:
      - 4000
    volumes:
      - ./litellm-config.yaml:/app/config.yaml
    networks:
      - caddy-network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["--config", "/app/config.yaml", "--port", "4000", "--num_workers", "8"]
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://127.0.0.1:4000/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  caddy-network:
    name: caddy-network
    external: true

volumes:
  ollama-data:
  postgres-data:
  n8n-data:
